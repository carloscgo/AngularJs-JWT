var app = angular.module("app", ['ngRoute', 'angular-jwt', 'angular-storage']);

app.constant('CONFIG', {
	APIURL: "http://localhost:8504",
})

.config(["$routeProvider", "$httpProvider", "jwtInterceptorProvider",  function ($routeProvider, $httpProvider, jwtInterceptorProvider)
{
    $httpProvider.defaults.headers.common["X-Requested-With"] = 'XMLHttpRequest';
    $httpProvider.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';

    jwtInterceptorProvider.tokenGetter = ['contactsFactory', function(contactsFactory) {
        return localStorage.getItem('token');
    }];

    $httpProvider.interceptors.push('jwtInterceptor');

    $routeProvider.when('/', {
        redirectTo: "/home"
    })
    .when("/home", {
        templateUrl: 'templates/home.html',
        controller: 'homeCtrl',
        authorization: true
    })
    .when("/login", {
        templateUrl: 'templates/login.html',
        controller: 'loginCtrl',
        authorization: false
    })
}])

.controller('homeCtrl', ['$scope','CONFIG', 'jwtHelper', 'store', 'contactsFactory', function($scope, CONFIG, jwtHelper, store, contactsFactory)
{
    //obtenemos el token en localStorage
    var token = store.get("token");

    //decodificamos para obtener los datos del user
    if(token)
    	var tokenPayload = jwtHelper.decodeToken(token);
    	//los mandamos a la vista como user
	$scope.user = tokenPayload;
	$scope.getContacts = function()
	{
		contactsFactory.get().then(function(res)
		{
		    if(res.data && res.data.code == 0)
		    {
		        store.set('token', res.data.token);
		        $scope.contacts = res.data.contactos;
		    }
		});
	}
}])

.controller('loginCtrl', ['$scope','CONFIG', 'authFactory', 'jwtHelper', 'store', '$location', function($scope, CONFIG, authFactory, jwtHelper, store, $location)
{
    $scope.login = function(user)
    {
        authFactory.login(user).then(function(res)
        {
console.log(res);
            if(res.data && res.data.code == 0)
            {
                store.set('token', res.data.token);
                $location.path("/home");
            }
        });
    }
}])

.factory("authFactory", ["$http", "$q", "CONFIG", function($http, $q, CONFIG)
{
	return {
		login: function(user)
		{
		    var deferred;
		    deferred = $q.defer();

		    var datos = {'username' : user.username, 'password' : user.password};
console.log(datos);
		    $http({
			method: 'POST',
			skipAuthorization: true,
			url: CONFIG.APIURL+'/auth/login',
			data: $.param(datos),
			headers: {'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8;'}
		    })
		    .then(function(res)
		    {
console.log(res);
			deferred.resolve(res);
		    })
		    .then(function(error)
		    {
console.log(error);
			deferred.reject(error);
		    });

		    return deferred.promise;
		}
	}
}])

.factory("contactsFactory", ["$http", "$q", "CONFIG", function($http, $q, CONFIG)
{
    return{
        get: function()
        {
            var deferred;
            deferred = $q.defer();

            $http({
                method: 'GET',
                skipAuthorization: false,
                url: CONFIG.APIURL+'/contacts'
            })
            .then(function(res)
            {
                deferred.resolve(res);
            })
            .then(function(error)
            {
                deferred.reject(error);
            })

            return deferred.promise;
        }
    }
}])

.run(["$rootScope", 'jwtHelper', 'store', '$location', function($rootScope, jwtHelper, store, $location)
{
    $rootScope.$on('$routeChangeStart', function (event, next)
    {
        var token = store.get("token") || null;

        if(!token)
	{
		$location.path("/login");
	}
        else
	{
		var bool = jwtHelper.isTokenExpired(token);

	        if(bool === true)
	            $location.path("/login");
	}
   });
}])

